{"version":3,"sources":["components/Overview/Overview.js","actions/actionTypes.js","actions/index.js","components/Sales/Sales.js","constants/index.js","components/Item/Item.js","components/Links/Links.js","components/LeftPanel/LeftPanel.js","components/AppContainer/AppContainer.js","components/App/App.js","services/apiFetchData.js","reportWebVitals.js","reducers/loadingReducer.js","reducers/index.js","store.js","index.js"],"names":["connect","state","FETCH_SUCCESS","FETCH_ERROR","FETCH_START","LOAD_DATA","SET_DATA_MODIFIED_FLAG","loadData","data","type","payload","mapDispatchToProps","setDataModifiedFlag","loadingReducer","sales","dataModified","props","undefined","products","forEach","row","retailSales","toLocaleString","wholesaleSales","unitsSold","retailerMargin","columns","dataField","text","sort","keyField","striped","hover","renderTable","title","description","subtitle","tags","image","className","src","alt","renderInfo","map","tag","i","renderTags","clickHandler","e","preventDefault","onClick","to","id","loading","RightContent","fetchData","dispatch","a","Promise","resolve","setTimeout","error","useEffect","basename","exact","path","render","Sales","Overview","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","action","combineReducers","middlewares","ReduxThunk","createStoreWithMiddleWare","applyMiddleware","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","rootElement","document","getElementById","ReactDOM","store"],"mappings":"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","file":"static/js/main.847b692e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Overview = () => {\r\n  return <>I am an awesome Overview component!</>;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {};\r\n};\r\n\r\nconst mapDispatchToProps = {};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Overview);\r\n","export const FETCH_SUCCESS = \"FETCH_SUCCESS\";\r\nexport const FETCH_ERROR = \"FETCH_ERROR\";\r\nexport const FETCH_START = \"FETCH_START\";\r\nexport const LOAD_DATA = \"LOAD_DATA\";\r\nexport const SET_DATA_MODIFIED_FLAG = \"SET_DATA_MODIFIED_FLAG\";\r\n","import {\r\n  FETCH_SUCCESS,\r\n  FETCH_ERROR,\r\n  FETCH_START,\r\n  LOAD_DATA,\r\n  SET_DATA_MODIFIED_FLAG,\r\n} from \"./actionTypes\";\r\nimport { apiFetchData } from \"../services/apiFetchData\";\r\n\r\nexport const fetchStart = () => {\r\n  return {\r\n    type: FETCH_START,\r\n  };\r\n};\r\n\r\nexport const fetchSuccess = () => {\r\n  return {\r\n    type: FETCH_SUCCESS,\r\n  };\r\n};\r\n\r\nexport const fetchError = (error) => {\r\n  return {\r\n    type: FETCH_ERROR,\r\n    payload: error,\r\n  };\r\n};\r\n\r\nexport const loadData = (data) => {\r\n  return {\r\n    type: LOAD_DATA,\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const fetchData = () => {\r\n  return async (dispatch) => {\r\n    dispatch(fetchStart());\r\n\r\n    try {\r\n      const data = await apiFetchData();\r\n      dispatch(loadData(data));\r\n      dispatch(fetchSuccess());\r\n    } catch (error) {\r\n      dispatch(fetchError(error));\r\n    }\r\n  };\r\n};\r\n\r\nexport const setDataModifiedFlag = () => {\r\n  return {\r\n    type: SET_DATA_MODIFIED_FLAG,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport {\r\n  WEEK_ENDING,\r\n  RETAIL_SALES,\r\n  WHOLESALE_SALES,\r\n  UNITS_SOLD,\r\n  RETAILER_MARGIN,\r\n} from \"../../constants/index\";\r\nimport { setDataModifiedFlag } from \"../../actions/index\";\r\n\r\nconst Sales = (props) => {\r\n  const modifyData = (data) => {\r\n    data.forEach((row) => {\r\n      row.retailSales =\r\n        typeof row.retailSales === \"string\"\r\n          ? row.retailSales\r\n          : `$${row.retailSales.toLocaleString()}`;\r\n\r\n      row.wholesaleSales =\r\n        typeof row.wholesaleSales === \"string\"\r\n          ? row.wholesaleSales\r\n          : `$${row.wholesaleSales.toLocaleString()}`;\r\n\r\n      row.unitsSold = row.unitsSold.toLocaleString();\r\n\r\n      row.retailerMargin =\r\n        typeof row.retailerMargin === \"string\"\r\n          ? row.retailerMargin\r\n          : `$${row.retailerMargin.toLocaleString()}`;\r\n    });\r\n\r\n    return data;\r\n  };\r\n\r\n  const renderTable = () => {\r\n    const { sales } = props;\r\n\r\n    if (sales !== undefined) {\r\n      const products = modifyData(sales);\r\n      const columns = [\r\n        {\r\n          dataField: \"weekEnding\",\r\n          text: WEEK_ENDING,\r\n          sort: true,\r\n        },\r\n        {\r\n          dataField: \"retailSales\",\r\n          text: RETAIL_SALES,\r\n          sort: true,\r\n        },\r\n        {\r\n          dataField: \"wholesaleSales\",\r\n          text: WHOLESALE_SALES,\r\n          sort: true,\r\n        },\r\n        {\r\n          dataField: \"unitsSold\",\r\n          text: UNITS_SOLD,\r\n          sort: true,\r\n        },\r\n        {\r\n          dataField: \"retailerMargin\",\r\n          text: RETAILER_MARGIN,\r\n          sort: true,\r\n        },\r\n      ];\r\n\r\n      return (\r\n        <div>\r\n          <BootstrapTable\r\n            keyField=\"id\"\r\n            data={products}\r\n            columns={columns}\r\n            striped\r\n            hover\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  return <>{renderTable()}</>;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { loadingReducer } = state;\r\n  const { data } = loadingReducer;\r\n  return {\r\n    sales: data.sales,\r\n    dataModified: data.dataModified,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = { setDataModifiedFlag };\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sales);\r\n","// Links\r\nexport const SALES = \"SALES\";\r\nexport const OVERVIEW = \"OVERVIEW\";\r\n\r\n// Sales Table headers\r\nexport const WEEK_ENDING = \"WEEK ENDING\";\r\nexport const RETAIL_SALES = \"RETAIL SALES\";\r\nexport const WHOLESALE_SALES = \"WHOLESALE SALES\";\r\nexport const UNITS_SOLD = \"UNITS SOLD\";\r\nexport const RETAILER_MARGIN = \"RETAILER MARGIN\";\r\n","import React from \"react\";\r\nimport \"./Item.css\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Item = (props) => {\r\n  const renderInfo = () => {\r\n    const { image, title, description } = props;\r\n    return (\r\n      <div className=\"itemInfo\">\r\n        <img src={image} alt={title} className=\"itemImage\" title={title} />\r\n        <h2>{title}</h2>\r\n        <p className=\"itemDescription\">{description}</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderTags = () => {\r\n    const { tags } = props;\r\n    if (tags !== undefined) {\r\n      return (\r\n        <div className=\"tagsContainer\">\r\n          <ul className=\"tagsList\">\r\n            {tags.map((tag, i) => {\r\n              return (\r\n                <li className=\"tag\" key={i}>\r\n                  {tag}\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderHr = () => {\r\n    return (\r\n      <div className=\"hrLine\">\r\n        <hr />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {renderInfo()}\r\n      {renderHr()}\r\n      {renderTags()}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { loadingReducer } = state;\r\n  const { data } = loadingReducer;\r\n  return {\r\n    title: data.title,\r\n    description: data.subtitle,\r\n    tags: data.tags,\r\n    image: data.image,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Item);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Links.css\";\r\nimport { OVERVIEW, SALES } from \"../../constants/index\";\r\n\r\nfunction Links() {\r\n  const clickHandler = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <ul className=\"links\">\r\n      <li onClick={(e) => clickHandler(e)}>\r\n        <Link to=\"/overview\" className=\"link\" id=\"overviewLink\">\r\n          {OVERVIEW}\r\n        </Link>\r\n      </li>\r\n      <li onClick={(e) => clickHandler(e)}>\r\n        <Link to=\"/\" className=\"link\" id=\"salesLink\">\r\n          {SALES}\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {};\r\n};\r\n\r\nconst mapDispatchToProps = {};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Links);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Item from \"../Item/Item\";\r\nimport Links from \"../Links/Links\";\r\nimport \"./LeftPanel.css\";\r\n\r\nconst LeftPanel = () => {\r\n  const renderHr = () => {\r\n    return (\r\n      <div className=\"hrLine\">\r\n        <hr />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Item />\r\n      {renderHr()}\r\n      <Links />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {};\r\n};\r\n\r\nconst mapDispatchToProps = {};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LeftPanel);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport LeftPanel from \"../LeftPanel/LeftPanel\";\r\nimport \"./AppContainer.css\";\r\n\r\nconst AppContainer = (props) => {\r\n  const renderComponents = () => {\r\n    return (\r\n      <>\r\n        <div className=\"leftPanelContainer\">\r\n          <LeftPanel />\r\n        </div>\r\n\r\n        <div className=\"rightContentContainer\">\r\n          <props.RightContent />\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"appContainer\">\r\n      {props.data !== null && props.loading === false\r\n        ? renderComponents()\r\n        : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { loadingReducer } = state;\r\n  return {\r\n    data: loadingReducer.data,\r\n    loading: loadingReducer.loading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppContainer);\r\n","import \"./App.css\";\r\nimport { Route, HashRouter, Switch } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport Overview from \"../Overview/Overview\";\r\nimport Sales from \"../Sales/Sales\";\r\nimport AppContainer from \"../AppContainer/AppContainer\";\r\nimport { useEffect } from \"react\";\r\nimport { fetchData } from \"../../actions/index\";\r\n\r\nfunction App(props) {\r\n  useEffect(() => {\r\n    props.fetchData();\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <HashRouter basename=\"/\">\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            render={(...props) => <AppContainer RightContent={Sales} />}\r\n          />\r\n          <Route\r\n            path=\"/overview\"\r\n            render={(...props) => <AppContainer RightContent={Overview} />}\r\n          />\r\n        </Switch>\r\n      </HashRouter>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {};\r\n};\r\n\r\nconst mapDispatchToProps = { fetchData };\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import data from \"../data/Webdev_data2.json\";\r\n\r\n/**\r\n * Retrieve JSON data from a file\r\n * Called in async/await actions.fetchData()\r\n */\r\nexport const apiFetchData = () => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => resolve(data[0], 1));\r\n  });\r\n};\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n  FETCH_SUCCESS,\r\n  FETCH_ERROR,\r\n  FETCH_START,\r\n  LOAD_DATA,\r\n  SET_DATA_MODIFIED_FLAG,\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  error: null,\r\n  dataModified: false,\r\n  data: {},\r\n};\r\n\r\nconst loadingReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_START:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case FETCH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n\r\n    case FETCH_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case LOAD_DATA:\r\n      return {\r\n        ...state,\r\n        data: action.payload,\r\n        loading: true,\r\n      };\r\n\r\n    case SET_DATA_MODIFIED_FLAG:\r\n      return {\r\n        ...state,\r\n        dataModified: true,\r\n        data: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default loadingReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport loadingReducer from \"./loadingReducer\";\r\n\r\nexport default combineReducers({\r\n  loadingReducer,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./reducers/index\";\r\nimport ReduxThunk from \"redux-thunk\";\r\n\r\nexport const middlewares = [ReduxThunk];\r\nconst createStoreWithMiddleWare = applyMiddleware(...middlewares)(createStore);\r\n\r\nexport default createStoreWithMiddleWare(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  rootElement\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}